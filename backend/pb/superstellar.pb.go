// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: superstellar.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Direction int32

const (
	Direction_DIR_CENTER Direction = 0
	Direction_DIR_RIGHT  Direction = 1
	Direction_DIR_LEFT   Direction = 2
)

// Enum value maps for Direction.
var (
	Direction_name = map[int32]string{
		0: "DIR_CENTER",
		1: "DIR_RIGHT",
		2: "DIR_LEFT",
	}
	Direction_value = map[string]int32{
		"DIR_CENTER": 0,
		"DIR_RIGHT":  1,
		"DIR_LEFT":   2,
	}
)

func (x Direction) Enum() *Direction {
	p := new(Direction)
	*p = x
	return p
}

func (x Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_superstellar_proto_enumTypes[0].Descriptor()
}

func (Direction) Type() protoreflect.EnumType {
	return &file_superstellar_proto_enumTypes[0]
}

func (x Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Direction.Descriptor instead.
func (Direction) EnumDescriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{0}
}

type UserInput int32

const (
	UserInput_CENTER              UserInput = 0
	UserInput_LEFT                UserInput = 1
	UserInput_RIGHT               UserInput = 2
	UserInput_THRUST_ON           UserInput = 3
	UserInput_THRUST_OFF          UserInput = 4
	UserInput_STRAIGHT_FIRE_START UserInput = 5
	UserInput_TURRET_FIRE_START   UserInput = 6
	UserInput_FIRE_STOP           UserInput = 7
	UserInput_BOOST_ON            UserInput = 8
	UserInput_BOOST_OFF           UserInput = 9
)

// Enum value maps for UserInput.
var (
	UserInput_name = map[int32]string{
		0: "CENTER",
		1: "LEFT",
		2: "RIGHT",
		3: "THRUST_ON",
		4: "THRUST_OFF",
		5: "STRAIGHT_FIRE_START",
		6: "TURRET_FIRE_START",
		7: "FIRE_STOP",
		8: "BOOST_ON",
		9: "BOOST_OFF",
	}
	UserInput_value = map[string]int32{
		"CENTER":              0,
		"LEFT":                1,
		"RIGHT":               2,
		"THRUST_ON":           3,
		"THRUST_OFF":          4,
		"STRAIGHT_FIRE_START": 5,
		"TURRET_FIRE_START":   6,
		"FIRE_STOP":           7,
		"BOOST_ON":            8,
		"BOOST_OFF":           9,
	}
)

func (x UserInput) Enum() *UserInput {
	p := new(UserInput)
	*p = x
	return p
}

func (x UserInput) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserInput) Descriptor() protoreflect.EnumDescriptor {
	return file_superstellar_proto_enumTypes[1].Descriptor()
}

func (UserInput) Type() protoreflect.EnumType {
	return &file_superstellar_proto_enumTypes[1]
}

func (x UserInput) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserInput.Descriptor instead.
func (UserInput) EnumDescriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{1}
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//	*Message_Space
	//	*Message_Hello
	//	*Message_PlayerLeft
	//	*Message_ProjectileFired
	//	*Message_ProjectileHit
	//	*Message_PlayerJoined
	//	*Message_JoinGameAck
	//	*Message_Leaderboard
	//	*Message_PlayerDied
	//	*Message_Pong
	//	*Message_ScoreBoard
	//	*Message_Constants
	Content isMessage_Content `protobuf_oneof:"content"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{0}
}

func (m *Message) GetContent() isMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *Message) GetSpace() *Space {
	if x, ok := x.GetContent().(*Message_Space); ok {
		return x.Space
	}
	return nil
}

func (x *Message) GetHello() *Hello {
	if x, ok := x.GetContent().(*Message_Hello); ok {
		return x.Hello
	}
	return nil
}

func (x *Message) GetPlayerLeft() *PlayerLeft {
	if x, ok := x.GetContent().(*Message_PlayerLeft); ok {
		return x.PlayerLeft
	}
	return nil
}

func (x *Message) GetProjectileFired() *ProjectileFired {
	if x, ok := x.GetContent().(*Message_ProjectileFired); ok {
		return x.ProjectileFired
	}
	return nil
}

func (x *Message) GetProjectileHit() *ProjectileHit {
	if x, ok := x.GetContent().(*Message_ProjectileHit); ok {
		return x.ProjectileHit
	}
	return nil
}

func (x *Message) GetPlayerJoined() *PlayerJoined {
	if x, ok := x.GetContent().(*Message_PlayerJoined); ok {
		return x.PlayerJoined
	}
	return nil
}

func (x *Message) GetJoinGameAck() *JoinGameAck {
	if x, ok := x.GetContent().(*Message_JoinGameAck); ok {
		return x.JoinGameAck
	}
	return nil
}

func (x *Message) GetLeaderboard() *Leaderboard {
	if x, ok := x.GetContent().(*Message_Leaderboard); ok {
		return x.Leaderboard
	}
	return nil
}

func (x *Message) GetPlayerDied() *PlayerDied {
	if x, ok := x.GetContent().(*Message_PlayerDied); ok {
		return x.PlayerDied
	}
	return nil
}

func (x *Message) GetPong() *Pong {
	if x, ok := x.GetContent().(*Message_Pong); ok {
		return x.Pong
	}
	return nil
}

func (x *Message) GetScoreBoard() *ScoreBoard {
	if x, ok := x.GetContent().(*Message_ScoreBoard); ok {
		return x.ScoreBoard
	}
	return nil
}

func (x *Message) GetConstants() *Constants {
	if x, ok := x.GetContent().(*Message_Constants); ok {
		return x.Constants
	}
	return nil
}

type isMessage_Content interface {
	isMessage_Content()
}

type Message_Space struct {
	Space *Space `protobuf:"bytes,1,opt,name=space,proto3,oneof"`
}

type Message_Hello struct {
	Hello *Hello `protobuf:"bytes,2,opt,name=hello,proto3,oneof"`
}

type Message_PlayerLeft struct {
	PlayerLeft *PlayerLeft `protobuf:"bytes,3,opt,name=playerLeft,proto3,oneof"`
}

type Message_ProjectileFired struct {
	ProjectileFired *ProjectileFired `protobuf:"bytes,4,opt,name=projectileFired,proto3,oneof"`
}

type Message_ProjectileHit struct {
	ProjectileHit *ProjectileHit `protobuf:"bytes,5,opt,name=projectileHit,proto3,oneof"`
}

type Message_PlayerJoined struct {
	PlayerJoined *PlayerJoined `protobuf:"bytes,6,opt,name=playerJoined,proto3,oneof"`
}

type Message_JoinGameAck struct {
	JoinGameAck *JoinGameAck `protobuf:"bytes,7,opt,name=joinGameAck,proto3,oneof"`
}

type Message_Leaderboard struct {
	Leaderboard *Leaderboard `protobuf:"bytes,8,opt,name=leaderboard,proto3,oneof"`
}

type Message_PlayerDied struct {
	PlayerDied *PlayerDied `protobuf:"bytes,9,opt,name=playerDied,proto3,oneof"`
}

type Message_Pong struct {
	Pong *Pong `protobuf:"bytes,10,opt,name=pong,proto3,oneof"`
}

type Message_ScoreBoard struct {
	ScoreBoard *ScoreBoard `protobuf:"bytes,11,opt,name=scoreBoard,proto3,oneof"`
}

type Message_Constants struct {
	Constants *Constants `protobuf:"bytes,12,opt,name=constants,proto3,oneof"`
}

func (*Message_Space) isMessage_Content() {}

func (*Message_Hello) isMessage_Content() {}

func (*Message_PlayerLeft) isMessage_Content() {}

func (*Message_ProjectileFired) isMessage_Content() {}

func (*Message_ProjectileHit) isMessage_Content() {}

func (*Message_PlayerJoined) isMessage_Content() {}

func (*Message_JoinGameAck) isMessage_Content() {}

func (*Message_Leaderboard) isMessage_Content() {}

func (*Message_PlayerDied) isMessage_Content() {}

func (*Message_Pong) isMessage_Content() {}

func (*Message_ScoreBoard) isMessage_Content() {}

func (*Message_Constants) isMessage_Content() {}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"zigzag32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"zigzag32,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{1}
}

func (x *Point) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Point) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Vector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Vector) Reset() {
	*x = Vector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector) ProtoMessage() {}

func (x *Vector) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector.ProtoReflect.Descriptor instead.
func (*Vector) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{2}
}

func (x *Vector) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Spaceship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Position        *Point    `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Velocity        *Vector   `protobuf:"bytes,3,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Facing          float64   `protobuf:"fixed64,4,opt,name=facing,proto3" json:"facing,omitempty"`
	AngularVelocity float64   `protobuf:"fixed64,5,opt,name=angularVelocity,proto3" json:"angularVelocity,omitempty"`
	InputDirection  Direction `protobuf:"varint,6,opt,name=inputDirection,proto3,enum=superstellar.Direction" json:"inputDirection,omitempty"`
	InputThrust     bool      `protobuf:"varint,7,opt,name=inputThrust,proto3" json:"inputThrust,omitempty"`
	InputBoost      bool      `protobuf:"varint,8,opt,name=inputBoost,proto3" json:"inputBoost,omitempty"`
	MaxHp           uint32    `protobuf:"varint,9,opt,name=maxHp,proto3" json:"maxHp,omitempty"`
	Hp              uint32    `protobuf:"varint,10,opt,name=hp,proto3" json:"hp,omitempty"`
	MaxEnergy       uint32    `protobuf:"varint,11,opt,name=maxEnergy,proto3" json:"maxEnergy,omitempty"`
	Energy          uint32    `protobuf:"varint,12,opt,name=energy,proto3" json:"energy,omitempty"`
	AutoRepairDelay uint32    `protobuf:"varint,13,opt,name=autoRepairDelay,proto3" json:"autoRepairDelay,omitempty"`
}

func (x *Spaceship) Reset() {
	*x = Spaceship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spaceship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spaceship) ProtoMessage() {}

func (x *Spaceship) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spaceship.ProtoReflect.Descriptor instead.
func (*Spaceship) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{3}
}

func (x *Spaceship) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Spaceship) GetPosition() *Point {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Spaceship) GetVelocity() *Vector {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *Spaceship) GetFacing() float64 {
	if x != nil {
		return x.Facing
	}
	return 0
}

func (x *Spaceship) GetAngularVelocity() float64 {
	if x != nil {
		return x.AngularVelocity
	}
	return 0
}

func (x *Spaceship) GetInputDirection() Direction {
	if x != nil {
		return x.InputDirection
	}
	return Direction_DIR_CENTER
}

func (x *Spaceship) GetInputThrust() bool {
	if x != nil {
		return x.InputThrust
	}
	return false
}

func (x *Spaceship) GetInputBoost() bool {
	if x != nil {
		return x.InputBoost
	}
	return false
}

func (x *Spaceship) GetMaxHp() uint32 {
	if x != nil {
		return x.MaxHp
	}
	return 0
}

func (x *Spaceship) GetHp() uint32 {
	if x != nil {
		return x.Hp
	}
	return 0
}

func (x *Spaceship) GetMaxEnergy() uint32 {
	if x != nil {
		return x.MaxEnergy
	}
	return 0
}

func (x *Spaceship) GetEnergy() uint32 {
	if x != nil {
		return x.Energy
	}
	return 0
}

func (x *Spaceship) GetAutoRepairDelay() uint32 {
	if x != nil {
		return x.AutoRepairDelay
	}
	return 0
}

type Asteroid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Position        *Point  `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Velocity        *Vector `protobuf:"bytes,3,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Facing          float64 `protobuf:"fixed64,4,opt,name=facing,proto3" json:"facing,omitempty"`
	AngularVelocity float64 `protobuf:"fixed64,5,opt,name=angularVelocity,proto3" json:"angularVelocity,omitempty"`
}

func (x *Asteroid) Reset() {
	*x = Asteroid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asteroid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asteroid) ProtoMessage() {}

func (x *Asteroid) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asteroid.ProtoReflect.Descriptor instead.
func (*Asteroid) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{4}
}

func (x *Asteroid) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Asteroid) GetPosition() *Point {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Asteroid) GetVelocity() *Vector {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *Asteroid) GetFacing() float64 {
	if x != nil {
		return x.Facing
	}
	return 0
}

func (x *Asteroid) GetAngularVelocity() float64 {
	if x != nil {
		return x.AngularVelocity
	}
	return 0
}

type ProjectileFired struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FrameId  uint32  `protobuf:"varint,2,opt,name=frameId,proto3" json:"frameId,omitempty"`
	Origin   *Point  `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	Velocity *Vector `protobuf:"bytes,4,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Facing   float32 `protobuf:"fixed32,5,opt,name=facing,proto3" json:"facing,omitempty"`
	Ttl      uint32  `protobuf:"varint,6,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *ProjectileFired) Reset() {
	*x = ProjectileFired{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectileFired) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectileFired) ProtoMessage() {}

func (x *ProjectileFired) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectileFired.ProtoReflect.Descriptor instead.
func (*ProjectileFired) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{5}
}

func (x *ProjectileFired) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectileFired) GetFrameId() uint32 {
	if x != nil {
		return x.FrameId
	}
	return 0
}

func (x *ProjectileFired) GetOrigin() *Point {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *ProjectileFired) GetVelocity() *Vector {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *ProjectileFired) GetFacing() float32 {
	if x != nil {
		return x.Facing
	}
	return 0
}

func (x *ProjectileFired) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type ProjectileHit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProjectileHit) Reset() {
	*x = ProjectileHit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectileHit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectileHit) ProtoMessage() {}

func (x *ProjectileHit) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectileHit.ProtoReflect.Descriptor instead.
func (*ProjectileHit) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{6}
}

func (x *ProjectileHit) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PlayerLeft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PlayerLeft) Reset() {
	*x = PlayerLeft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLeft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLeft) ProtoMessage() {}

func (x *PlayerLeft) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLeft.ProtoReflect.Descriptor instead.
func (*PlayerLeft) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{7}
}

func (x *PlayerLeft) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PlayerJoined struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *PlayerJoined) Reset() {
	*x = PlayerJoined{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerJoined) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerJoined) ProtoMessage() {}

func (x *PlayerJoined) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerJoined.ProtoReflect.Descriptor instead.
func (*PlayerJoined) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{8}
}

func (x *PlayerJoined) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlayerJoined) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type PlayerDied struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	KilledBy uint32 `protobuf:"varint,2,opt,name=killedBy,proto3" json:"killedBy,omitempty"`
}

func (x *PlayerDied) Reset() {
	*x = PlayerDied{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerDied) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerDied) ProtoMessage() {}

func (x *PlayerDied) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerDied.ProtoReflect.Descriptor instead.
func (*PlayerDied) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{9}
}

func (x *PlayerDied) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlayerDied) GetKilledBy() uint32 {
	if x != nil {
		return x.KilledBy
	}
	return 0
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{10}
}

func (x *Ping) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{11}
}

func (x *Pong) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Space struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhysicsFrameID uint32       `protobuf:"varint,1,opt,name=physicsFrameID,proto3" json:"physicsFrameID,omitempty"`
	Spaceships     []*Spaceship `protobuf:"bytes,2,rep,name=spaceships,proto3" json:"spaceships,omitempty"`
	Asteroids      []*Asteroid  `protobuf:"bytes,3,rep,name=asteroids,proto3" json:"asteroids,omitempty"`
}

func (x *Space) Reset() {
	*x = Space{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Space) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Space) ProtoMessage() {}

func (x *Space) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Space.ProtoReflect.Descriptor instead.
func (*Space) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{12}
}

func (x *Space) GetPhysicsFrameID() uint32 {
	if x != nil {
		return x.PhysicsFrameID
	}
	return 0
}

func (x *Space) GetSpaceships() []*Spaceship {
	if x != nil {
		return x.Spaceships
	}
	return nil
}

func (x *Space) GetAsteroids() []*Asteroid {
	if x != nil {
		return x.Asteroids
	}
	return nil
}

type Hello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyId         uint32            `protobuf:"varint,1,opt,name=myId,proto3" json:"myId,omitempty"`
	IdToUsername map[uint32]string `protobuf:"bytes,2,rep,name=idToUsername,proto3" json:"idToUsername,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Hello) Reset() {
	*x = Hello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hello) ProtoMessage() {}

func (x *Hello) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hello.ProtoReflect.Descriptor instead.
func (*Hello) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{13}
}

func (x *Hello) GetMyId() uint32 {
	if x != nil {
		return x.MyId
	}
	return 0
}

func (x *Hello) GetIdToUsername() map[uint32]string {
	if x != nil {
		return x.IdToUsername
	}
	return nil
}

type Constants struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorldRadius                           float32 `protobuf:"fixed32,1,opt,name=worldRadius,proto3" json:"worldRadius,omitempty"`
	BoundaryAnnulusWidth                  float32 `protobuf:"fixed32,2,opt,name=boundaryAnnulusWidth,proto3" json:"boundaryAnnulusWidth,omitempty"`
	SpaceshipAcceleration                 float32 `protobuf:"fixed32,3,opt,name=spaceshipAcceleration,proto3" json:"spaceshipAcceleration,omitempty"`
	FrictionCoefficient                   float32 `protobuf:"fixed32,4,opt,name=frictionCoefficient,proto3" json:"frictionCoefficient,omitempty"`
	SpaceshipNonlinearAngularAcceleration float32 `protobuf:"fixed32,5,opt,name=spaceshipNonlinearAngularAcceleration,proto3" json:"spaceshipNonlinearAngularAcceleration,omitempty"`
	SpaceshipLinearAngularAcceleration    float32 `protobuf:"fixed32,6,opt,name=spaceshipLinearAngularAcceleration,proto3" json:"spaceshipLinearAngularAcceleration,omitempty"`
	SpaceshipMaxAngularVelocity           float32 `protobuf:"fixed32,7,opt,name=spaceshipMaxAngularVelocity,proto3" json:"spaceshipMaxAngularVelocity,omitempty"`
	SpaceshipAngularFriction              float32 `protobuf:"fixed32,8,opt,name=spaceshipAngularFriction,proto3" json:"spaceshipAngularFriction,omitempty"`
	SpaceshipMaxSpeed                     uint32  `protobuf:"varint,9,opt,name=spaceshipMaxSpeed,proto3" json:"spaceshipMaxSpeed,omitempty"`
	SpaceshipBoostFactor                  float32 `protobuf:"fixed32,10,opt,name=spaceshipBoostFactor,proto3" json:"spaceshipBoostFactor,omitempty"`
	AutoRepairInterval                    uint32  `protobuf:"varint,11,opt,name=autoRepairInterval,proto3" json:"autoRepairInterval,omitempty"`
	AutoRepairAmount                      uint32  `protobuf:"varint,12,opt,name=autoRepairAmount,proto3" json:"autoRepairAmount,omitempty"`
	AutoEnergyRechargeAmount              uint32  `protobuf:"varint,13,opt,name=autoEnergyRechargeAmount,proto3" json:"autoEnergyRechargeAmount,omitempty"`
	BoostPerFrameEnergyCost               uint32  `protobuf:"varint,14,opt,name=boostPerFrameEnergyCost,proto3" json:"boostPerFrameEnergyCost,omitempty"`
}

func (x *Constants) Reset() {
	*x = Constants{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Constants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Constants) ProtoMessage() {}

func (x *Constants) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Constants.ProtoReflect.Descriptor instead.
func (*Constants) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{14}
}

func (x *Constants) GetWorldRadius() float32 {
	if x != nil {
		return x.WorldRadius
	}
	return 0
}

func (x *Constants) GetBoundaryAnnulusWidth() float32 {
	if x != nil {
		return x.BoundaryAnnulusWidth
	}
	return 0
}

func (x *Constants) GetSpaceshipAcceleration() float32 {
	if x != nil {
		return x.SpaceshipAcceleration
	}
	return 0
}

func (x *Constants) GetFrictionCoefficient() float32 {
	if x != nil {
		return x.FrictionCoefficient
	}
	return 0
}

func (x *Constants) GetSpaceshipNonlinearAngularAcceleration() float32 {
	if x != nil {
		return x.SpaceshipNonlinearAngularAcceleration
	}
	return 0
}

func (x *Constants) GetSpaceshipLinearAngularAcceleration() float32 {
	if x != nil {
		return x.SpaceshipLinearAngularAcceleration
	}
	return 0
}

func (x *Constants) GetSpaceshipMaxAngularVelocity() float32 {
	if x != nil {
		return x.SpaceshipMaxAngularVelocity
	}
	return 0
}

func (x *Constants) GetSpaceshipAngularFriction() float32 {
	if x != nil {
		return x.SpaceshipAngularFriction
	}
	return 0
}

func (x *Constants) GetSpaceshipMaxSpeed() uint32 {
	if x != nil {
		return x.SpaceshipMaxSpeed
	}
	return 0
}

func (x *Constants) GetSpaceshipBoostFactor() float32 {
	if x != nil {
		return x.SpaceshipBoostFactor
	}
	return 0
}

func (x *Constants) GetAutoRepairInterval() uint32 {
	if x != nil {
		return x.AutoRepairInterval
	}
	return 0
}

func (x *Constants) GetAutoRepairAmount() uint32 {
	if x != nil {
		return x.AutoRepairAmount
	}
	return 0
}

func (x *Constants) GetAutoEnergyRechargeAmount() uint32 {
	if x != nil {
		return x.AutoEnergyRechargeAmount
	}
	return 0
}

func (x *Constants) GetBoostPerFrameEnergyCost() uint32 {
	if x != nil {
		return x.BoostPerFrameEnergyCost
	}
	return 0
}

type JoinGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *JoinGame) Reset() {
	*x = JoinGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGame) ProtoMessage() {}

func (x *JoinGame) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGame.ProtoReflect.Descriptor instead.
func (*JoinGame) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{15}
}

func (x *JoinGame) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type JoinGameAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *JoinGameAck) Reset() {
	*x = JoinGameAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGameAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGameAck) ProtoMessage() {}

func (x *JoinGameAck) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGameAck.ProtoReflect.Descriptor instead.
func (*JoinGameAck) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{16}
}

func (x *JoinGameAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *JoinGameAck) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UserAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInput UserInput `protobuf:"varint,1,opt,name=userInput,proto3,enum=superstellar.UserInput" json:"userInput,omitempty"`
}

func (x *UserAction) Reset() {
	*x = UserAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAction) ProtoMessage() {}

func (x *UserAction) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAction.ProtoReflect.Descriptor instead.
func (*UserAction) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{17}
}

func (x *UserAction) GetUserInput() UserInput {
	if x != nil {
		return x.UserInput
	}
	return UserInput_CENTER
}

type TargetAngle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Angle float32 `protobuf:"fixed32,1,opt,name=angle,proto3" json:"angle,omitempty"`
}

func (x *TargetAngle) Reset() {
	*x = TargetAngle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetAngle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetAngle) ProtoMessage() {}

func (x *TargetAngle) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetAngle.ProtoReflect.Descriptor instead.
func (*TargetAngle) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{18}
}

func (x *TargetAngle) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

type UserMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//	*UserMessage_UserAction
	//	*UserMessage_JoinGame
	//	*UserMessage_Ping
	//	*UserMessage_TargetAngle
	Content isUserMessage_Content `protobuf_oneof:"content"`
}

func (x *UserMessage) Reset() {
	*x = UserMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMessage) ProtoMessage() {}

func (x *UserMessage) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMessage.ProtoReflect.Descriptor instead.
func (*UserMessage) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{19}
}

func (m *UserMessage) GetContent() isUserMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *UserMessage) GetUserAction() *UserAction {
	if x, ok := x.GetContent().(*UserMessage_UserAction); ok {
		return x.UserAction
	}
	return nil
}

func (x *UserMessage) GetJoinGame() *JoinGame {
	if x, ok := x.GetContent().(*UserMessage_JoinGame); ok {
		return x.JoinGame
	}
	return nil
}

func (x *UserMessage) GetPing() *Ping {
	if x, ok := x.GetContent().(*UserMessage_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *UserMessage) GetTargetAngle() *TargetAngle {
	if x, ok := x.GetContent().(*UserMessage_TargetAngle); ok {
		return x.TargetAngle
	}
	return nil
}

type isUserMessage_Content interface {
	isUserMessage_Content()
}

type UserMessage_UserAction struct {
	UserAction *UserAction `protobuf:"bytes,1,opt,name=userAction,proto3,oneof"`
}

type UserMessage_JoinGame struct {
	JoinGame *JoinGame `protobuf:"bytes,2,opt,name=joinGame,proto3,oneof"`
}

type UserMessage_Ping struct {
	Ping *Ping `protobuf:"bytes,3,opt,name=ping,proto3,oneof"`
}

type UserMessage_TargetAngle struct {
	TargetAngle *TargetAngle `protobuf:"bytes,4,opt,name=targetAngle,proto3,oneof"`
}

func (*UserMessage_UserAction) isUserMessage_Content() {}

func (*UserMessage_JoinGame) isUserMessage_Content() {}

func (*UserMessage_Ping) isUserMessage_Content() {}

func (*UserMessage_TargetAngle) isUserMessage_Content() {}

type Rank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Score uint32 `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *Rank) Reset() {
	*x = Rank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rank) ProtoMessage() {}

func (x *Rank) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rank.ProtoReflect.Descriptor instead.
func (*Rank) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{20}
}

func (x *Rank) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Rank) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type Leaderboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ranks        []*Rank `protobuf:"bytes,1,rep,name=ranks,proto3" json:"ranks,omitempty"`
	ClientId     uint32  `protobuf:"varint,2,opt,name=clientId,proto3" json:"clientId,omitempty"`
	UserScore    uint32  `protobuf:"varint,3,opt,name=userScore,proto3" json:"userScore,omitempty"`
	UserPosition uint32  `protobuf:"varint,4,opt,name=userPosition,proto3" json:"userPosition,omitempty"`
}

func (x *Leaderboard) Reset() {
	*x = Leaderboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Leaderboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Leaderboard) ProtoMessage() {}

func (x *Leaderboard) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Leaderboard.ProtoReflect.Descriptor instead.
func (*Leaderboard) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{21}
}

func (x *Leaderboard) GetRanks() []*Rank {
	if x != nil {
		return x.Ranks
	}
	return nil
}

func (x *Leaderboard) GetClientId() uint32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *Leaderboard) GetUserScore() uint32 {
	if x != nil {
		return x.UserScore
	}
	return 0
}

func (x *Leaderboard) GetUserPosition() uint32 {
	if x != nil {
		return x.UserPosition
	}
	return 0
}

type ScoreBoardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score uint32 `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ScoreBoardItem) Reset() {
	*x = ScoreBoardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreBoardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreBoardItem) ProtoMessage() {}

func (x *ScoreBoardItem) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreBoardItem.ProtoReflect.Descriptor instead.
func (*ScoreBoardItem) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{22}
}

func (x *ScoreBoardItem) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ScoreBoardItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ScoreBoard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ScoreBoardItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ScoreBoard) Reset() {
	*x = ScoreBoard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superstellar_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreBoard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreBoard) ProtoMessage() {}

func (x *ScoreBoard) ProtoReflect() protoreflect.Message {
	mi := &file_superstellar_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreBoard.ProtoReflect.Descriptor instead.
func (*ScoreBoard) Descriptor() ([]byte, []int) {
	return file_superstellar_proto_rawDescGZIP(), []int{23}
}

func (x *ScoreBoard) GetItems() []*ScoreBoardItem {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_superstellar_proto protoreflect.FileDescriptor

var file_superstellar_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c,
	0x61, 0x72, 0x22, 0xd5, 0x05, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b,
	0x0a, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x48,
	0x00, 0x52, 0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4c, 0x65, 0x66, 0x74, 0x12, 0x49, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x6c, 0x65, 0x46, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x6c, 0x65, 0x46, 0x69, 0x72, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0f,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6c, 0x65, 0x46, 0x69, 0x72, 0x65, 0x64, 0x12,
	0x43, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6c, 0x65, 0x48, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74,
	0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6c, 0x65,
	0x48, 0x69, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6c,
	0x65, 0x48, 0x69, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0b, 0x6a, 0x6f, 0x69, 0x6e, 0x47, 0x61,
	0x6d, 0x65, 0x41, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47,
	0x61, 0x6d, 0x65, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0b, 0x6a, 0x6f, 0x69, 0x6e, 0x47, 0x61,
	0x6d, 0x65, 0x41, 0x63, 0x6b, 0x12, 0x3d, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x69,
	0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72,
	0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x69,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x69, 0x65, 0x64,
	0x12, 0x28, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6f,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x0a, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x73, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x42,
	0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x23, 0x0a, 0x05, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x01,
	0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x01, 0x79, 0x22,
	0x24, 0x0a, 0x06, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x01, 0x79, 0x22, 0xc9, 0x03, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73,
	0x68, 0x69, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65,
	0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74,
	0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x76, 0x65,
	0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x28,
	0x0a, 0x0f, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72,
	0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x0e, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x54, 0x68, 0x72, 0x75, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x68, 0x72, 0x75, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x61, 0x78, 0x48, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x48,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x68,
	0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x52,
	0x65, 0x70, 0x61, 0x69, 0x72, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x44, 0x65, 0x6c, 0x61,
	0x79, 0x22, 0xbf, 0x01, 0x0a, 0x08, 0x41, 0x73, 0x74, 0x65, 0x72, 0x6f, 0x69, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x30, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x6e, 0x67,
	0x75, 0x6c, 0x61, 0x72, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0f, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x56, 0x65, 0x6c, 0x6f, 0x63,
	0x69, 0x74, 0x79, 0x22, 0xc4, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x6c, 0x65, 0x46, 0x69, 0x72, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x2b, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72,
	0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x30,
	0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x1f, 0x0a, 0x0d, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6c, 0x65, 0x48, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1c, 0x0a, 0x0a, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x0c, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44,
	0x69, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x79, 0x22,
	0x16, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x22,
	0x9e, 0x01, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x68, 0x79,
	0x73, 0x69, 0x63, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49,
	0x44, 0x12, 0x37, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65,
	0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0a,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x6f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x41, 0x73, 0x74,
	0x65, 0x72, 0x6f, 0x69, 0x64, 0x52, 0x09, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6f, 0x69, 0x64, 0x73,
	0x22, 0xa7, 0x01, 0x0a, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x79, 0x49, 0x64, 0x12, 0x49,
	0x0a, 0x0c, 0x69, 0x64, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c,
	0x6c, 0x61, 0x72, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x49, 0x64, 0x54, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x69, 0x64, 0x54,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x3f, 0x0a, 0x11, 0x49, 0x64, 0x54,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa1, 0x06, 0x0a, 0x09, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x6e, 0x75, 0x6c, 0x75, 0x73, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x61,
	0x72, 0x79, 0x41, 0x6e, 0x6e, 0x75, 0x6c, 0x75, 0x73, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x34,
	0x0a, 0x15, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x41, 0x63, 0x63, 0x65, 0x6c,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x15, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x66, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x13, 0x66, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x65, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x25, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73,
	0x68, 0x69, 0x70, 0x4e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x6e, 0x67, 0x75,
	0x6c, 0x61, 0x72, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x25, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70,
	0x4e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72,
	0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x22,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41,
	0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x22, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73,
	0x68, 0x69, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72,
	0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x1b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x4d, 0x61, 0x78, 0x41, 0x6e, 0x67, 0x75,
	0x6c, 0x61, 0x72, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x1b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x4d, 0x61, 0x78, 0x41,
	0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x3a,
	0x0a, 0x18, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x41, 0x6e, 0x67, 0x75, 0x6c,
	0x61, 0x72, 0x46, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x18, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x41, 0x6e, 0x67, 0x75, 0x6c,
	0x61, 0x72, 0x46, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x4d, 0x61, 0x78, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70,
	0x4d, 0x61, 0x78, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x68, 0x69, 0x70, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69,
	0x70, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x12,
	0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x10,
	0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x61,
	0x69, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x61, 0x75, 0x74, 0x6f,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x61, 0x75, 0x74, 0x6f,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x50, 0x65, 0x72,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x50, 0x65, 0x72, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x22, 0x26,
	0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61,
	0x6d, 0x65, 0x41, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x43, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74,
	0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x23, 0x0a, 0x0b, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x22,
	0xf3, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3a, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c,
	0x61, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x6a,
	0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x4a, 0x6f, 0x69,
	0x6e, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x3d, 0x0a, 0x0b, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x2c, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x0b, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61,
	0x72, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a, 0x0e, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x74, 0x65, 0x6c,
	0x6c, 0x61, 0x72, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2a, 0x38, 0x0a, 0x09, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49, 0x52, 0x5f, 0x43, 0x45,
	0x4e, 0x54, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x49, 0x52, 0x5f, 0x52, 0x49,
	0x47, 0x48, 0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x52, 0x5f, 0x4c, 0x45, 0x46,
	0x54, 0x10, 0x02, 0x2a, 0xa7, 0x01, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x49, 0x47, 0x48, 0x54,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x48, 0x52, 0x55, 0x53, 0x54, 0x5f, 0x4f, 0x4e, 0x10,
	0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x48, 0x52, 0x55, 0x53, 0x54, 0x5f, 0x4f, 0x46, 0x46, 0x10,
	0x04, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x52, 0x41, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x46, 0x49,
	0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x55,
	0x52, 0x52, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10,
	0x06, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x49, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x07,
	0x12, 0x0c, 0x0a, 0x08, 0x42, 0x4f, 0x4f, 0x53, 0x54, 0x5f, 0x4f, 0x4e, 0x10, 0x08, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x4f, 0x4f, 0x53, 0x54, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x09, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_superstellar_proto_rawDescOnce sync.Once
	file_superstellar_proto_rawDescData = file_superstellar_proto_rawDesc
)

func file_superstellar_proto_rawDescGZIP() []byte {
	file_superstellar_proto_rawDescOnce.Do(func() {
		file_superstellar_proto_rawDescData = protoimpl.X.CompressGZIP(file_superstellar_proto_rawDescData)
	})
	return file_superstellar_proto_rawDescData
}

var file_superstellar_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_superstellar_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_superstellar_proto_goTypes = []interface{}{
	(Direction)(0),          // 0: superstellar.Direction
	(UserInput)(0),          // 1: superstellar.UserInput
	(*Message)(nil),         // 2: superstellar.Message
	(*Point)(nil),           // 3: superstellar.Point
	(*Vector)(nil),          // 4: superstellar.Vector
	(*Spaceship)(nil),       // 5: superstellar.Spaceship
	(*Asteroid)(nil),        // 6: superstellar.Asteroid
	(*ProjectileFired)(nil), // 7: superstellar.ProjectileFired
	(*ProjectileHit)(nil),   // 8: superstellar.ProjectileHit
	(*PlayerLeft)(nil),      // 9: superstellar.PlayerLeft
	(*PlayerJoined)(nil),    // 10: superstellar.PlayerJoined
	(*PlayerDied)(nil),      // 11: superstellar.PlayerDied
	(*Ping)(nil),            // 12: superstellar.Ping
	(*Pong)(nil),            // 13: superstellar.Pong
	(*Space)(nil),           // 14: superstellar.Space
	(*Hello)(nil),           // 15: superstellar.Hello
	(*Constants)(nil),       // 16: superstellar.Constants
	(*JoinGame)(nil),        // 17: superstellar.JoinGame
	(*JoinGameAck)(nil),     // 18: superstellar.JoinGameAck
	(*UserAction)(nil),      // 19: superstellar.UserAction
	(*TargetAngle)(nil),     // 20: superstellar.TargetAngle
	(*UserMessage)(nil),     // 21: superstellar.UserMessage
	(*Rank)(nil),            // 22: superstellar.Rank
	(*Leaderboard)(nil),     // 23: superstellar.Leaderboard
	(*ScoreBoardItem)(nil),  // 24: superstellar.ScoreBoardItem
	(*ScoreBoard)(nil),      // 25: superstellar.ScoreBoard
	nil,                     // 26: superstellar.Hello.IdToUsernameEntry
}
var file_superstellar_proto_depIdxs = []int32{
	14, // 0: superstellar.Message.space:type_name -> superstellar.Space
	15, // 1: superstellar.Message.hello:type_name -> superstellar.Hello
	9,  // 2: superstellar.Message.playerLeft:type_name -> superstellar.PlayerLeft
	7,  // 3: superstellar.Message.projectileFired:type_name -> superstellar.ProjectileFired
	8,  // 4: superstellar.Message.projectileHit:type_name -> superstellar.ProjectileHit
	10, // 5: superstellar.Message.playerJoined:type_name -> superstellar.PlayerJoined
	18, // 6: superstellar.Message.joinGameAck:type_name -> superstellar.JoinGameAck
	23, // 7: superstellar.Message.leaderboard:type_name -> superstellar.Leaderboard
	11, // 8: superstellar.Message.playerDied:type_name -> superstellar.PlayerDied
	13, // 9: superstellar.Message.pong:type_name -> superstellar.Pong
	25, // 10: superstellar.Message.scoreBoard:type_name -> superstellar.ScoreBoard
	16, // 11: superstellar.Message.constants:type_name -> superstellar.Constants
	3,  // 12: superstellar.Spaceship.position:type_name -> superstellar.Point
	4,  // 13: superstellar.Spaceship.velocity:type_name -> superstellar.Vector
	0,  // 14: superstellar.Spaceship.inputDirection:type_name -> superstellar.Direction
	3,  // 15: superstellar.Asteroid.position:type_name -> superstellar.Point
	4,  // 16: superstellar.Asteroid.velocity:type_name -> superstellar.Vector
	3,  // 17: superstellar.ProjectileFired.origin:type_name -> superstellar.Point
	4,  // 18: superstellar.ProjectileFired.velocity:type_name -> superstellar.Vector
	5,  // 19: superstellar.Space.spaceships:type_name -> superstellar.Spaceship
	6,  // 20: superstellar.Space.asteroids:type_name -> superstellar.Asteroid
	26, // 21: superstellar.Hello.idToUsername:type_name -> superstellar.Hello.IdToUsernameEntry
	1,  // 22: superstellar.UserAction.userInput:type_name -> superstellar.UserInput
	19, // 23: superstellar.UserMessage.userAction:type_name -> superstellar.UserAction
	17, // 24: superstellar.UserMessage.joinGame:type_name -> superstellar.JoinGame
	12, // 25: superstellar.UserMessage.ping:type_name -> superstellar.Ping
	20, // 26: superstellar.UserMessage.targetAngle:type_name -> superstellar.TargetAngle
	22, // 27: superstellar.Leaderboard.ranks:type_name -> superstellar.Rank
	24, // 28: superstellar.ScoreBoard.items:type_name -> superstellar.ScoreBoardItem
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_superstellar_proto_init() }
func file_superstellar_proto_init() {
	if File_superstellar_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_superstellar_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spaceship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asteroid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectileFired); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectileHit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLeft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerJoined); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerDied); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Space); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Constants); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGameAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetAngle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Leaderboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreBoardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superstellar_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreBoard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_superstellar_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Message_Space)(nil),
		(*Message_Hello)(nil),
		(*Message_PlayerLeft)(nil),
		(*Message_ProjectileFired)(nil),
		(*Message_ProjectileHit)(nil),
		(*Message_PlayerJoined)(nil),
		(*Message_JoinGameAck)(nil),
		(*Message_Leaderboard)(nil),
		(*Message_PlayerDied)(nil),
		(*Message_Pong)(nil),
		(*Message_ScoreBoard)(nil),
		(*Message_Constants)(nil),
	}
	file_superstellar_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*UserMessage_UserAction)(nil),
		(*UserMessage_JoinGame)(nil),
		(*UserMessage_Ping)(nil),
		(*UserMessage_TargetAngle)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_superstellar_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_superstellar_proto_goTypes,
		DependencyIndexes: file_superstellar_proto_depIdxs,
		EnumInfos:         file_superstellar_proto_enumTypes,
		MessageInfos:      file_superstellar_proto_msgTypes,
	}.Build()
	File_superstellar_proto = out.File
	file_superstellar_proto_rawDesc = nil
	file_superstellar_proto_goTypes = nil
	file_superstellar_proto_depIdxs = nil
}
